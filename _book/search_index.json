[["index.html", "A Minimal Book Example Chapter 1 Prerequisites", " A Minimal Book Example Yihui Xie 2021-05-14 Chapter 1 Prerequisites This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). The bookdown package can be installed from CRAN or Github: install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&quot;rstudio/bookdown&quot;) Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. To compile this example to PDF, you need XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. "],["qiime2.html", "Chapter 2 QIIME2分析流程 2.1 双端测序数据的分析流程 2.2 数据分析实例", " Chapter 2 QIIME2分析流程 QIIME2是目前分析16S最为常见的分析包，可以帮助分析者从原始DNA序列获取可供发表的图文结果。QIIME2具有一些特征: 集成和自动跟踪的数据来源 语义系统 微生物功能分析插件 多种用户接口 关于QIIME2的详细分析流程可见QIIME2的原始文档,该文档链接为2021.4月的QIIME2官方文档。 2.1 双端测序数据的分析流程 QIIME2的分析流程可见下图： 其中黄色框代表操作方法，绿色块代表文件或数据。 所有的宏基因组/扩增子测序的分析的起点是原始序列数据,原始数据多数为fastq格式，其包含有DNA序列数据和每个碱基的质量值 在样本来源未知时，需要使用barcode进行样本拆分（demultiplex），以便确定每条序列来自于哪个样本 序列去噪（denoised）以获得扩增子序列变异（amplicon sequence variants, ASVs） 在序列去噪的过程中，会由于测序数据的质量较差，导致很多样本丢失。这个时候需要使用较为严格的数据预处理，但这也会相应的减少16S序列的长度，造成下游的物种分配难点。 2.1.1 QIIME2的安装 使用conda即可轻松安装QIIME2并激活,以安装2021.4版本为例： wget https://data.qiime2.org/distro/core/qiime2-2021.4-py38-linux-conda.yml conda env create -n qiime2-2021.4 --file qiime2-2021.4-py38-linux-conda.yml # OPTIONAL CLEANUP rm qiime2-2021.4-py38-linux-conda.yml ## 激活环境 conda activate qiime2-2021.4 ## 检测安装 qiime --help 2.1.2 QIIME2的数据格式 QIIME2主要以两种输出为主，后缀分别为qza和qzv，我们分别讲述这两类文件: qza：QIIME 2 artifacts，qza文件包含文件数据和元数据（metadata），分析过程中的各类数据都被打包为qza文件格式，实际上，qza文件格式是zip文件格式的另一种说法，将文件的后缀从qza修改为zip即可以对文件进行解压操作并提取出文件内的原始内容。 qzv:visualizations。qiime2的各类可视化文件均以qzv文件格式保留，将qzv文件拖入网站QIIME2 VIEW即可查看。 2.2 数据分析实例 以文章Persistent Gut Microbiota Immaturity in Malnourished Bangladeshi Children为例，介绍分析流程。 2.2.1 数据下载 从ENA获取Accession Number为PRJEB5482的序列下载信息，数据下载完成后，在数据目录下运行命令: seqkit stat -j 40 ./* 其中，-j参数为指定运行的线程数目，该命令会统计每个序列文件的基础信息包括有序列数目，bp个数等，若某个文件下载不完整出现序列片段的缺失，则命令会对该文件进行报错。 2.2.2 导入数据 首先创建文件pe-33-manifest.txt，该文件应当包含样本的基础id和fastq序列的绝对路径，示例如下： sample-id forward-absolute-filepath reverse-absolute-filepath 1 /home/jfh/Storage3/Micro-Develop/ref_7/fastq/Bgmal10.s10_R1.fastq.gz /home/jfh/Storage3/Micro-Develop/ref_7/fastq/Bgmal10.s10_R2.fastq.gz 2 /home/jfh/Storage3/Micro-Develop/ref_7/fastq/Bgmal10.s11_R1.fastq.gz /home/jfh/Storage3/Micro-Develop/ref_7/fastq/Bgmal10.s11_R2.fastq.gz 另一个文件则为metadata文件，该文件构成样本id和文件属性的对应: sample-id sample-name group #q2:types categorical categorical 1 Bgmal10.s10 course_of_the_SAM_trial 2 Bgmal10.s11 course_of_the_SAM_trial 3 Bgmal10.s12 course_of_the_SAM_trial 4 Bgmal10.s13 course_of_the_SAM_trial 5 Bgmal10.s1 course_of_the_SAM_trial 6 Bgmal10.s3 course_of_the_SAM_trial 将数据导入到qza文件中 qiime tools import --type &#39;SampleData[PairedEndSequencesWithQuality]&#39; \\ --input-path pe-33-manifest.txt --output-path pe_sequence.qza \\ --input-format PairedEndFastqManifestPhred33V2 ## 获得可视化的质量图形 qiime demux summarize --i-data pe_sequence.qza \\ --o-visualization pe_sequence.qzv 将生成的pe_sequence.qzv导入到qiime2view中进行查看。可以看到如下结果： 从图中可以看到，reverse数据的质量很差，在140bp时就出现了数据质量的大幅度下降。 下面为数据基本统计： Minimum: 2545 Median: 21910.0 Mean: 31070.940995382247 Maximum: 887651 Total: 60557264 数据质控 dada2去噪会由于样本测序质量较差而丢失样本，在本研究中尤甚，故重新选择了deblur去噪，但该去噪方案速度极慢,但是需要注意的是，在大部分的分析中，以DADA2去噪为主流方案。关于DADA2的去噪方法请查看官网moving tutorial教程 qiime quality-filter q-score \\ --i-demux pe_sequence.qza \\ --o-filtered-sequences demux-filtered.qza \\ --o-filter-stats demux-filter-stats.qza ## 只保留120bp的片段 qiime deblur denoise-16S \\ --i-demultiplexed-seqs demux-filtered.qza \\ --p-trim-length 120 \\ --o-representative-sequences rep-seqs-deblur.qza \\ --o-table table-deblur.qza \\ --p-sample-stats \\ --o-stats deblur-stats.qza #生成ASV table qiime feature-table summarize --i-table table-deblur.qza --o-visualization table-deblur.qzv mv table-deblur.qza table.qza ;mv rep-seqs-deblur.qza rep-seqs.qza 多序列比对和构建进化树 #可视化feature qiime feature-table summarize --i-table table.qza --o-visualization table.qzv ## 构建进化树 qiime phylogeny align-to-tree-mafft-fasttree \\ --i-sequences rep-seqs.qza \\ --o-alignment aligned-rep-seqs.qza \\ --o-masked-alignment masked-aligned-rep-seqs.qza \\ --o-tree unrooted-tree.qza \\ --o-rooted-tree rooted-tree.qza 从上述文件Healthy-filtered-table.qzv观测样本的特征，Feature Count最小为2324，为了保证复现，我们在稀释的时候应当保证每一个样本都能够保留。故按照 2324的标准进行稀释。 查看稀释曲线 qiime diversity alpha-rarefaction \\ --i-table table.qza \\ --i-phylogeny rooted-tree.qza \\ --p-max-depth 2324 \\ --m-metadata-file metadata.txt \\ --o-visualization alpha-rarefaction.qzv 将文件alpha-rarefaction.qzv在QIIME2 VIEW中查看，大部分样本在2324时ASV数目基本趋于饱和。 稀释样本 qiime diversity core-metrics-phylogenetic \\ --i-phylogeny rooted-tree.qza \\ --i-table Healthy-filtered-table.qza \\ --p-sampling-depth 2324 \\ --m-metadata-file metadata.txt \\ --output-dir core-metrics 物种分类 qiime feature-classifier classify-sklearn \\ --i-classifier gg-13-8-99-nb-classifier.qza \\ --i-reads rep-seqs.qza \\ --o-classification taxonomy.qza qiime metadata tabulate \\ --m-input-file taxonomy.qza \\ --o-visualization taxonomy.qzv qiime taxa barplot \\ --i-table core-metrics/rarefied_table.qza \\ --i-taxonomy taxonomy.qza \\ --m-metadata-file metadata.txt \\ --o-visualization rarefied_taxa-bar-plots.qzv 不同水平的物种丰度结果可以直接从rarefied_taxa-bar-plots.qzv中获取，而每一个ASV的丰度则位于文件rarefied_table.qza中，我们可以将该文件解压，获取其中data目录下的biom文件 mkdir -p ASV; cd ASV cp ../core-metrics/rarefied_table.qza rarefied_table.zip unzip rarefied_table.zip; # 需要对解压下的文件夹重命名，比如命名为rarefied_table cd rarefied_table/data; biom convert -i feature-table.biom -o asv_table.txt --to-tsv 这样便可以获取每一个ASV的丰度了。 "]]
